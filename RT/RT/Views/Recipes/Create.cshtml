@model RT.Models.RecipeViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Recipe</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Recipe.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Recipe.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Recipe.Title, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Recipe.CookingTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Recipe.CookingTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Recipe.CookingTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Author.AuthorName, "Author Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
				@Html.EditorFor(model => model.Author.AuthorName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Author.AuthorName, "", new { @class = "text-danger" })
            </div>
        </div>

		<div class="form-group">
			@Html.LabelFor(model => model.Ingredients.RecipeIngredient1, "Ingredients", htmlAttributes: new { @class = "control-label col-md-2" })
			
			<div class="col-md-9">
				@Html.EditorFor(model => model.Ingredients.RecipeIngredient1, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Ingredients.RecipeIngredient1, "", new { @class = "text-danger" })
				<div class="input_fields_wrap">		
				</div>

			</div>
			<div class="col-md-1">
				<button class="add_field_button"><span class="glyphicon glyphicon-plus"></span></button>
			</div>
		</div>





		<div class="form-group">
			@Html.LabelFor(model => model.Directions.RecipeDirection1, "Directions", htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-9">
				@Html.EditorFor(model => model.Directions.RecipeDirection1, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Directions.RecipeDirection1, "", new { @class = "text-danger" })
				<div class="direction_input_fields_wrap">
				</div>
			</div>

			<div class="col-md-1">
				<button class="add_direction_field_button"><span class="glyphicon glyphicon-plus"></span></button>
			</div>
		</div>

		


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>


	

}


@Html.ActionLink("Add from URL", "GetRecipeFromURL",new { }, new { @class = "btn btn-primary" })


<div>
    @Html.ActionLink("Back to List", "Index")
</div>



