@model RT.Models.RecipeViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Recipe</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Recipe.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Recipe.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Recipe.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Recipe.CookingTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Recipe.CookingTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Recipe.CookingTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Author.AuthorName, "Author Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
				@Html.EditorFor(model => model.Author.AuthorName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Author.AuthorName, "", new { @class = "text-danger" })
            </div>
        </div>

		<div class="form-group">
			@Html.LabelFor(model => model.Ingredients.RecipeIngredient, "Ingredients", htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Ingredients.RecipeIngredient, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Ingredients.RecipeIngredient, "", new { @class = "text-danger" })
			</div>

		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Directions.RecipeDirection, "Directions", htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Directions.RecipeDirection, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Directions.RecipeDirection, "", new { @class = "text-danger" })
			</div>
		</div>

		


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>




<!--------------------------------->
@*<div class="input_fields_wrap">
	<button class="add_field_button">Add More Fields</button>
	<div><input type="text" name="mytext[]"></div>
</div>*@



@*<div id="wrapper">
	<p>Try to type</p>
	<div data-bind="foreach: users">
		<input type="text" data-bind="value: name, attr: { name: 'Users[' + $index() + ']' }" />
		<span data-bind="text: name"></span>
	</div>
	<a href="#" data-bind="click: addUser">Add user</a>
</div>*@

<!------------------------------------->

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
